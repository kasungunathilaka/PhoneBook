// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PhoneBook.Persistence;
using System;

namespace PhoneBook.Persistence.Migrations
{
    [DbContext(typeof(PhoneBookContext))]
    [Migration("20180305105145_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhoneBook.Contract.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<Guid>("ContactDetailsId");

                    b.Property<string>("Province");

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("ContactDetailsId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PhoneBook.Contract.Entities.ContactDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("Email");

                    b.Property<string>("FacebookId");

                    b.Property<string>("HomePhone");

                    b.Property<string>("MobilePhone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("PhoneBook.Contract.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PhoneBook.Contract.Entities.Address", b =>
                {
                    b.HasOne("PhoneBook.Contract.Entities.ContactDetails", "ContactDetails")
                        .WithOne("Address")
                        .HasForeignKey("PhoneBook.Contract.Entities.Address", "ContactDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PhoneBook.Contract.Entities.ContactDetails", b =>
                {
                    b.HasOne("PhoneBook.Contract.Entities.Customer", "Customer")
                        .WithOne("ContactDetails")
                        .HasForeignKey("PhoneBook.Contract.Entities.ContactDetails", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
